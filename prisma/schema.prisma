// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  organizationId String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Organization {
  id   String @id @default(cuid())
  name String

  users     User[]
  histories History[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum HistoryStatus {
  DRAFT
  ON_REVIEW
  APPROVED
  DISCREPANCY
  SIGNING
  COMPLETE
}

enum SurgeryType {
  DEPOSIT // Deposito
  BAIL // Fianza
}

model History {
  id   Int    @id @default(autoincrement())
  name String

  surgeryDate DateTime
  surgeryType SurgeryType
  doctor String
  notes String
  // TODO: Add materials, this can be text, images, etc.

  status         HistoryStatus @default(DRAFT)
  organizationId String
  organization   Organization  @relation(fields: [organizationId], references: [id])

  changes HistoryChanges[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HistoryChanges {
  id        Int            @id @default(autoincrement())
  from      HistoryStatus?
  to        HistoryStatus
  historyId Int
  history   History        @relation(fields: [historyId], references: [id])
}
